version: '3.8'

services:
  # Label Studio 服务
  label-studio:
    image: heartexlabs/label-studio:1.6.0
    container_name: label-studio-plant
    ports:
      - "8081:8080"
    volumes:
      - ./label-studio-data:/label-studio/data
    environment:
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true
      - LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT=/label-studio/data/files
      - LABEL_STUDIO_USERNAME=${LABEL_STUDIO_USERNAME:-admin@example.com}
      - LABEL_STUDIO_PASSWORD=${LABEL_STUDIO_PASSWORD:-password}
      - LABEL_STUDIO_USER_TOKEN=${LABEL_STUDIO_API_KEY:-your-predefined-token-here}
      - LABEL_STUDIO_ML_BACKEND_V2=true
    restart: unless-stopped
    networks:
      - label-studio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # YOLO ML Backend 增强版服务
  yolo:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TEST_ENV=${TEST_ENV:-false}
    image: yolo-ml-backend:latest
    container_name: yolo-enhanced
    ports:
      - "9090:9090"
    environment:
      # 基础配置
      - MODEL_DIR=/app/models
      - LABEL_STUDIO_URL=http://label-studio:8080
      - LABEL_STUDIO_API_KEY=${LABEL_STUDIO_API_KEY:-your-predefined-token-here}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=/app
      
      # YOLO模型配置
      - ALLOW_CUSTOM_MODEL_PATH=true
      - MODEL_SCORE_THRESHOLD=0.3
      - MODEL_CONF_THRESHOLD=0.25
      
      # 增强功能配置
      - ENABLE_ENHANCED_FEATURES=true
      - MODEL_SHOW_CONFIDENCE=true
      - MODEL_ENABLE_FINETUNE=true
      - MODEL_PRIORITIZE_UNCERTAIN=true
      - MODEL_MIN_ANNOTATIONS=10
      - MODEL_RETRAIN_INTERVAL=5
      - MODEL_FINETUNE_EPOCHS=20
      - MODEL_FINETUNE_BATCH=8
      - MODEL_FINETUNE_LR=0.001
      - MODEL_FINETUNE_PATIENCE=5
      
      # 不确定性采样配置
      - UNCERTAINTY_THRESHOLD=0.5
      - MIN_CONFIDENCE_FOR_TRAINING=0.3
      
      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RQ_QUEUE_NAME=default
      
      # 缓存配置
      - CACHE_TYPE=sqlite
      - CACHE_DIR=/app/cache_dir
      
      # GPU支持
      - NVIDIA_VISIBLE_DEVICES=all
      
    volumes:
      - ./models:/app/models
      - ./training_data:/app/training_data
      - ./cache:/app/cache
      - ./uncertainty_cache:/app/uncertainty_cache
      - ./cache_dir:/app/cache_dir
      - ./control_models:/app/control_models:ro
      - ./label-studio-data:/label-studio/data:ro
      
    restart: unless-stopped
    depends_on:
      - label-studio
      - redis
    networks:
      - label-studio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # GPU 支持（如果有 GPU）
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: redis-ml
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - label-studio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  label-studio-network:
    driver: bridge

volumes:
  redis-data:
    driver: local